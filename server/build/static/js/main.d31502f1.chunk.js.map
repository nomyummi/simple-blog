{"version":3,"sources":["components/posts/PostTeaser.js","components/posts/PostList.js","components/comments/Comment.js","components/comments/CommentForm.js","components/comments/CommentSection.js","components/posts/PostPage.js","components/posts/PostForm.js","App.js","index.js"],"names":["StyledPostTeaser","styled","div","PostTeaser","props","postNumber","title","date","text","readableDate","Date","toUTCString","match","useRouteMatch","history","useHistory","onClick","push","url","redirectToPost","he","decode","String","substring","Math","min","length","PostList","useState","posts","setPosts","useEffect","a","fetch","method","response","json","postList","fetchData","className","map","post","_id","StyledComment","Comment","comment","author","StyledLabel","label","StyledTextArea","textarea","StyledError","p","schema","yup","shape","required","max","CommentForm","useForm","resolver","yupResolver","register","handleSubmit","errors","reset","onSubmit","data","rows","cols","name","ref","message","type","CommentSection","newComments","setNewComments","headers","mode","body","JSON","stringify","newComment","alert","comments","StyledText","PostPage","setPost","useParams","commentSection","StyledInput","input","PostForm","App","path","exact","component","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d31502f1.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {useRouteMatch,useHistory} from 'react-router-dom';\r\nimport he from 'he';\r\n\r\nconst StyledPostTeaser = styled.div`\r\n  &:hover {\r\n    opacity: 0.7;\r\n  }\r\n  cursor:pointer;\r\n`;\r\n\r\nfunction PostTeaser(props){\r\n  const {postNumber,title,date,text} = props;\r\n  let readableDate = new Date(date);\r\n  readableDate = readableDate.toUTCString();\r\n  const postTeaserLength = 200;\r\n  let match = useRouteMatch();\r\n  let history = useHistory();\r\n\r\n  const redirectToPost = (postNumber)=>{\r\n    history.push(`${match.url}post/${postNumber}`);\r\n  }\r\n\r\n  return (\r\n    <StyledPostTeaser onClick={()=>redirectToPost(`${postNumber}`)}>\r\n      <h1>{he.decode(String(title))}</h1>\r\n      <p>{readableDate}</p>\r\n      <p>{he.decode(String(text.substring(0,Math.min(text.length,postTeaserLength))))}...</p>\r\n    </StyledPostTeaser>\r\n  )\r\n}\r\n\r\nexport default PostTeaser;","import React,{useEffect, useState} from 'react';\r\nimport PostTeaser from './PostTeaser.js';\r\n\r\n//TODO: Future feature - look into pagination (page 1, page 2, page 3)\r\nfunction PostList(props){\r\n  const [posts,setPosts] = useState([]);\r\n  \r\n  useEffect(()=>{\r\n    async function fetchData(){\r\n      const response = await fetch(`/api`,{\r\n        method:'GET'\r\n      });\r\n      const postList = await response.json();\r\n      setPosts(postList);\r\n    }\r\n    fetchData();\r\n  }\r\n  //eslint-disable-next-line\r\n  ,[]);\r\n  \r\n  return (\r\n    <div className=\"post-list\">\r\n        {posts.map((post)=>(\r\n        <PostTeaser \r\n          postNumber={post.postNumber} \r\n          title={post.title} \r\n          date={post.date}\r\n          text={post.text}\r\n          key={post._id}>\r\n        </PostTeaser>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostList;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport he from 'he';\r\n\r\nconst StyledComment = styled.div`\r\n`\r\nfunction Comment(props){\r\n  const {comment} = props;\r\n  return (\r\n    <StyledComment>\r\n      <h4>{he.decode(('author' in comment) ? String(comment.author) : 'Anonymous')}</h4>\r\n      <p>{(new Date(comment.date)).toUTCString()}</p>\r\n      <p>{he.decode(String(comment.text))}</p>\r\n    </StyledComment>\r\n  )\r\n}\r\n\r\nexport default Comment;","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLabel = styled.label`\r\n  font-weight: bold;\r\n  display: block;\r\n`\r\nconst StyledTextArea = styled.textarea`\r\n  &.error-input-field {\r\n    background-color: #fff0f2;\r\n    border-width: 1px;\r\n    border-color: -internal-light-dark(rgb(118, 118, 118), rgb(133, 133, 133));\r\n    border-radius: 2px;\r\n  }\r\n  font-family: Arial;\r\n  font-size: 0.85em;\r\n  display: block;\r\n`\r\nconst StyledError = styled.p`\r\n  &::before{\r\n    content: \"âš  \";\r\n  }\r\n  color: red;\r\n  margin: 0;\r\n`\r\nconst schema = yup.object().shape({\r\n  text: yup.string().required().max(10000), // Max ~1500 words\r\n});\r\n\r\nfunction CommentForm(props){\r\n  const { register, handleSubmit, errors,reset } = useForm({\r\n    resolver: yupResolver(schema)\r\n  });\r\n  \r\n  return (\r\n    <form onSubmit={handleSubmit((data)=>{\r\n      props.onSubmit(data);\r\n      reset();\r\n    })}>\r\n      <StyledLabel>Leave a Comment</StyledLabel>\r\n      <StyledTextArea rows='10' cols='100' name=\"text\" ref={register({required: true})} className={errors.text ? \"error-input-field\" : \"\"}></StyledTextArea>\r\n      {errors.text && <StyledError>{errors.text?.message}</StyledError>}\r\n      <input type=\"submit\" />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default CommentForm;","import React,{useState} from 'react';\r\nimport Comment from './Comment.js';\r\nimport CommentForm from './CommentForm.js';\r\n\r\nfunction CommentSection(props){\r\n  const [newComments,setNewComments] = useState([]);\r\n  const onSubmit = async (data)=>{\r\n    data.postNumber = props.postNumber;\r\n    const response = await fetch(`/api/post/${props.postNumber}`,{\r\n      method:'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      mode:'cors',\r\n      body: JSON.stringify(data)\r\n    });\r\n    const newComment = await response.json();\r\n    if (!('errors' in newComment)){\r\n      setNewComments([...newComments,newComment]);\r\n    } else {\r\n      alert(newComment.errors);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {props.comments.map(comment=>(\r\n        <Comment comment={comment} key={comment._id}></Comment>\r\n      ))}\r\n      {newComments.map(comment=>{\r\n        return <Comment comment={comment} key={comment._id}></Comment>\r\n      })}\r\n      <CommentForm onSubmit={onSubmit}></CommentForm>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommentSection;","import React,{useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport CommentSection from '../comments/CommentSection.js';\r\nimport styled from 'styled-components';\r\nimport he from 'he';\r\nconst StyledText = styled.p`\r\n  white-space: pre-wrap;\r\n`\r\nfunction PostPage(props){\r\n  const [post,setPost] = useState({});\r\n  const {postNumber} = useParams();\r\n  \r\n  useEffect(()=>{\r\n    async function fetchData(){\r\n      const response = await fetch(`/api/post/${postNumber}`);\r\n      setPost(await response.json());\r\n    }\r\n    fetchData();\r\n  }\r\n  // eslint-disable-next-line\r\n  ,[]);\r\n\r\n  const commentSection = (()=>{\r\n    if ('comments' in post) {\r\n      return (\r\n        <CommentSection comments={post.comments} postNumber={postNumber}></CommentSection>\r\n      );\r\n     } else {\r\n      return null;\r\n    } \r\n  })();\r\n\r\n  return (\r\n    <div className=\"post-page\">\r\n      <h1>{he.decode(String(post.title))}</h1>\r\n      <p>{(new Date(post.date)).toUTCString()}</p>\r\n      <StyledText>{he.decode(String(post.text))}</StyledText>\r\n      {commentSection}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostPage;","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport styled from 'styled-components';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst StyledLabel = styled.label`\r\n  display: block;\r\n`\r\nconst StyledInput = styled.input`\r\n  &.error-input-field {\r\n    background-color:#fff0f2;\r\n    border-width: 1px;\r\n    border-color: -internal-light-dark(rgb(118, 118, 118), rgb(133, 133, 133));\r\n    border-radius: 2px;\r\n  }\r\n  font-family: Arial;\r\n  font-size: 0.85em;\r\n  display: block;\r\n`\r\nconst StyledTextArea = styled.textarea`\r\n  &.error-input-field {\r\n    background-color: #fff0f2;\r\n    border-width: 1px;\r\n    border-color: -internal-light-dark(rgb(118, 118, 118), rgb(133, 133, 133));\r\n    border-radius: 2px;\r\n  }\r\n  font-family: Arial;\r\n  font-size: 0.85em;\r\n  display: block;\r\n`\r\nconst StyledError = styled.p`\r\n  &::before{\r\n    content: \"âš  \";\r\n  }\r\n  color: red;\r\n  margin: 0;\r\n`\r\nconst schema = yup.object().shape({\r\n  title: yup.string().required().max(1000), // Max ~150 words \r\n  text: yup.string().required().max(250000), // Max ~40,000 words\r\n});\r\n\r\nfunction PostForm(props){\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(schema)\r\n  });\r\n  let history = useHistory();\r\n\r\n  const redirectToPost = (postNumber)=>{\r\n    history.push(`/post/${postNumber}`);\r\n  }\r\n\r\n  const onSubmit = async (data)=>{\r\n    const response = await fetch(`/api/post/create`,{\r\n      method:'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      mode:'cors',\r\n      body: JSON.stringify(data)\r\n    });\r\n    const json = await response.json();\r\n    if ('postNumber' in json){\r\n      redirectToPost(`${json.postNumber}`);\r\n    } else {\r\n      alert('Server error'); //TODO: change to proper error handling\r\n    }\r\n    \r\n  }\r\n  \r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <StyledLabel>Title</StyledLabel>\r\n      <StyledInput type=\"text\" name=\"title\" ref={register({required: true})} className={errors.title ? \"error-input-field\" : \"\"}/>\r\n      {errors.title && <StyledError>{errors.title?.message}</StyledError>}\r\n      <StyledLabel>Text</StyledLabel>\r\n      <StyledTextArea rows='12' cols='100' name=\"text\" ref={register({required: true})} className={errors.text ? \"error-input-field\" : \"\"}></StyledTextArea>\r\n      {errors.text && <StyledError>{errors.text?.message}</StyledError>}\r\n      <input type=\"submit\" />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PostForm;","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport PostList from './components/posts/PostList.js';\nimport PostPage from './components/posts/PostPage.js';\nimport PostForm from './components/posts/PostForm.js';\n// Use React Router to route to components/posts/PostPage.js ('/post/:postNumber') and components/posts/PostList.js ('/')\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path='/post/create' exact component={PostForm}/>\n        <Route path='/post/:postNumber' exact component={PostPage} />\n        <Route path='/' exact component={PostList} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}